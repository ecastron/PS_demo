install.packages(c("xlsx","gtools","ggplot"))
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("phyloseq")
library(phyloseq)
library(phyloseq)
?plot_richness
library(xlsx)
library(gtools)
directory<-"~/PS_demo/tsv"
setwd(directory)
list_of_files <- list.files(path=directory, pattern = ".tsv")
patient_names<-NULL
for( i in 1:length(list_of_files)){
patient_names[i]<-substring(list_of_files[i], 1, 6)
}
read_counts <- lapply(list_of_files, read.table, sep="\t", header = FALSE, skip =2)
read_counts <- lapply(read_counts, function(x) x[, c(1,4)])
read_counts <- lapply(read_counts, function(x) x[complete.cases(x),])
for( i in 1:length(list_of_files)){
colnames(read_counts[[i]])<- c("OTU", patient_names[i])
}
otu<-NULL
for( i in 1:length(list_of_files)){
otu[i]<- list(as.character(read_counts[[i]][, 1]))
}
read_counts <- lapply(read_counts, function(x) t(x[,2]))
for( i in 1:length(list_of_files)){
read_counts[[i]]<-data.frame(read_counts[[i]])
colnames(read_counts[[i]])<-otu[[i]]
read_counts[[i]]<-data.frame(patient = patient_names[i], read_counts[[i]])
}
otu_table <- read_counts[[1]]
for( i in 2:length(list_of_files)){
otu_table <- smartbind(otu_table, read_counts[[i]], fill = 0)
}
otu_table<-t(data.matrix(otu_table))
colnames(otu_table)<-patient_names
otu_table<-otu_table[2:nrow(otu_table), ]
otu_table_noZeroes<-otu_table[apply(otu_table[,-1], 1, function(x) !all(x==0)),]
View(otu_table_noZeroes)
setwd("~/PS_demo/data")
read.csv("otu_table.csv", header=TRUE, row.names=1) ->otu_table
read.csv("taxmat.csv", header=TRUE, row.names=1) ->taxmat
read.table('metadata.txt', header=TRUE, sep='\t', row.names=1) -> metadata
as.matrix(otu_table)->otu_table
as.matrix(taxmat)->taxmat
rownames(otumat) <- paste0("OTU", 1:nrow(otumat))
rownames(taxmat) <- rownames(otumat)
OTU = otu_table(otumat, taxa_are_rows = TRUE)
TAX = tax_table(taxmat)
rownames(otumat) <- paste0("OTU", 1:nrow(otumat))
as.matrix(otu_table)->otumat
as.matrix(taxmat)->taxmat
rownames(otumat) <- paste0("OTU", 1:nrow(otumat))
rownames(taxmat) <- rownames(otumat)
OTU = otu_table(otumat, taxa_are_rows = TRUE)
TAX = tax_table(taxmat)
physeq = phyloseq(OTU, TAX)
sampledata = sample_data(metadata)
physeq = merge_phyloseq(physeq, sampledata)
physeq
plot_richness(asthma, x = "state", color = "state",measures=c("Observed","Chao1", "Fisher","ACE", "Shannon", "Simpson", "InvSimpson")) + geom_boxplot()
plot_richness(physeq, x = "state", color = "state",measures=c("Observed","Chao1", "Fisher","ACE", "Shannon", "Simpson", "InvSimpson")) + geom_boxplot()
library(ggplot2)
plot_richness(physeq, x = "state", color = "state",measures=c("Observed","Chao1", "Fisher","ACE", "Shannon", "Simpson", "InvSimpson")) + geom_boxplot()
plot_bar(physeq, fill = "Superkingdom")
plot_heatmap(physeq, taxa.label = "Superkingdom")
library("DESeq2")
library("ggplot2")
sample_data(physeq)$state <- relevel(sample_data(physeq)$state, "control")
diagdds = phyloseq_to_deseq2(physeq, ~ cigsmoker + state)
diagdds = DESeq(diagdds,test="Wald", fitType = "local")
res = results(diagdds, cooksCutoff = FALSE)
res = res[order(res$padj, na.last = NA), ]
alpha = 0.001
sigtab = res[(res$padj < alpha), ]
sigtab = cbind(as(sigtab, "data.frame"), as(tax_table(physeq)[rownames(sigtab), ], "matrix"))
posigtab = sigtab[sigtab[, "log2FoldChange"] > 0, ]
posigtab = posigtab[, c("baseMean", "log2FoldChange", "lfcSE", "padj", "Phylum", "Class", "Family", "Genus","Species")]
theme_set(theme_bw())
scale_fill_discrete <- function(palname = "Set1", ...) {
scale_fill_brewer(palette = palname, ...)
}
sigtabgen = subset(sigtab, !is.na(Genus))
# Phylum order
x = tapply(sigtabgen$log2FoldChange, sigtabgen$Phylum, function(x) max(x))
x = sort(x, TRUE)
sigtabgen$Phylum = factor(as.character(sigtabgen$Phylum), levels = names(x))
# Genus order
x = tapply(sigtabgen$log2FoldChange, sigtabgen$Genus, function(x) max(x))
x = sort(x, TRUE)
sigtabgen$Genus = factor(as.character(sigtabgen$Genus), levels = names(x))
ggplot(sigtabgen, aes(x = Genus, y = log2FoldChange, color = Phylum)) + geom_point(size = 6) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust = 0.5))
library(xlsx)
library(gtools)
directory<-"~/PS_demo/tsv"
setwd(directory)
list_of_files <- list.files(path=directory, pattern = ".tsv")
patient_names<-NULL
for( i in 1:length(list_of_files)){
patient_names[i]<-substring(list_of_files[i], 1, 6)
}
read_counts <- lapply(list_of_files, read.table, sep="\t", header = FALSE, skip =2)
read_counts <- lapply(read_counts, function(x) x[, c(1,4)])
read_counts <- lapply(read_counts, function(x) x[complete.cases(x),])
for( i in 1:length(list_of_files)){
colnames(read_counts[[i]])<- c("OTU", patient_names[i])
}
otu<-NULL
for( i in 1:length(list_of_files)){
otu[i]<- list(as.character(read_counts[[i]][, 1]))
}
read_counts <- lapply(read_counts, function(x) t(x[,2]))
for( i in 1:length(list_of_files)){
read_counts[[i]]<-data.frame(read_counts[[i]])
colnames(read_counts[[i]])<-otu[[i]]
read_counts[[i]]<-data.frame(patient = patient_names[i], read_counts[[i]])
}
otu_table <- read_counts[[1]]
for( i in 2:length(list_of_files)){
otu_table <- smartbind(otu_table, read_counts[[i]], fill = 0)
}
otu_table<-t(data.matrix(otu_table))
colnames(otu_table)<-patient_names
otu_table<-otu_table[2:nrow(otu_table), ]
otu_table_noZeroes<-otu_table[apply(otu_table[,-1], 1, function(x) !all(x==0)),]
View(otu_table_noZeroes)
library(phyloseq)
setwd("~/PS_demo/data")
read.csv("otu_table.csv", header=TRUE, row.names=1) ->otu_table
read.csv("taxmat.csv", header=TRUE, row.names=1) ->taxmat
read.table('metadata.txt', header=TRUE, sep='\t', row.names=1) -> metadata
as.matrix(otu_table)->otumat
as.matrix(taxmat)->taxmat
rownames(otumat) <- paste0("OTU", 1:nrow(otumat))
rownames(taxmat) <- rownames(otumat)
OTU = otu_table(otumat, taxa_are_rows = TRUE)
TAX = tax_table(taxmat)
physeq = phyloseq(OTU, TAX)
sampledata = sample_data(metadata)
physeq = merge_phyloseq(physeq, sampledata)
library("ggplot2")
plot_richness(physeq, x = "state", color = "state",measures=c("Observed","Chao1", "Fisher","ACE", "Shannon", "Simpson", "InvSimpson")) + geom_boxplot()
library("DESeq2")
sample_data(physeq)$state <- relevel(sample_data(physeq)$state, "control")
diagdds = phyloseq_to_deseq2(physeq, ~ cigsmoker + state)
diagdds = DESeq(diagdds,test="Wald", fitType = "local")
res = results(diagdds, cooksCutoff = FALSE)
res = res[order(res$padj, na.last = NA), ]
alpha = 0.001
sigtab = res[(res$padj < alpha), ]
sigtab = cbind(as(sigtab, "data.frame"), as(tax_table(physeq)[rownames(sigtab), ], "matrix"))
posigtab = sigtab[sigtab[, "log2FoldChange"] > 0, ]
posigtab = posigtab[, c("baseMean", "log2FoldChange", "lfcSE", "padj", "Phylum", "Class", "Family", "Genus","Species")]
theme_set(theme_bw())
scale_fill_discrete <- function(palname = "Set1", ...) {
scale_fill_brewer(palette = palname, ...)
}
sigtabgen = subset(sigtab, !is.na(Genus))
# Phylum order
x = tapply(sigtabgen$log2FoldChange, sigtabgen$Phylum, function(x) max(x))
x = sort(x, TRUE)
sigtabgen$Phylum = factor(as.character(sigtabgen$Phylum), levels = names(x))
# Genus order
x = tapply(sigtabgen$log2FoldChange, sigtabgen$Genus, function(x) max(x))
x = sort(x, TRUE)
sigtabgen$Genus = factor(as.character(sigtabgen$Genus), levels = names(x))
ggplot(sigtabgen, aes(x = Genus, y = log2FoldChange, color = Phylum)) + geom_point(size = 6) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust = 0.5))
